"use strict"
// –ú–∞—Å–∏–≤–∏
// let someArray = ["üòÄ", "üòâ", "üòÆ‚Äçüí®"];
/*
// console.log(someArray);
// console.log(someArray.length);
// console.log(typeof someArray);
// console.log(someArray[2]);
*/
/*
for (let i = 0; i < someArray.length; ++i) {
	console.log(someArray[i]);
} //–ø—Ä–∞—Ü—é—î –ø–æ–¥—ñ–±–Ω–æ –¥–æ forEach, –∞–ª–µ –Ω–µ –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω–¥–µ–∫—Å
*/
/*
// someArray.forEach(someArray => {
// 	console.log(someArray);
// });
someArray.forEach((someArray, index) => {
	console.log(someArray);
	console.log(index);
});
*/
/*
someArray.push("ü•≥", "ü§•");//–ú–µ—Ç–æ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ –º–∞—Å–∏–≤ (–¥–æ–¥–∞—é—Ç—å—Å—è –≤ –∫—ñ–Ω–µ—Ü—å)
console.log(someArray);
someArray.pop();//–ú–µ—Ç–æ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –º–∞—Å–∏–≤—É (–≤–∏–¥–∞–ª—è—î –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç)
console.log(someArray);
someArray.unshift("üòØ", "üòµ");//–º–µ—Ç–æ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
console.log(someArray);
someArray.shift();//–º–µ—Ç–æ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
console.log(someArray);
//shift —Ç–∞ unshift –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –¥–æ–≤—à–µ —Ç–æ–º—É —â–æ –∫–æ–∂–Ω–æ–º—É —ñ–∑ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç–∏ —ñ–Ω–¥–µ–∫—Å
*/
/*
let a = Math.random();
let b = Math.random();
if (a > b) {
	someArray.push("ü•≥", "ü§•");
} else {
	someArray.pop();
}
console.log(someArray);
*/
/*
delete someArray[1]; //–º–µ—Ç–æ–¥ –≤–∏–¥–∞–ª—è—î –µ–ª–µ–º–µ–Ω—Ç —ñ –∑–∞–ª–∏—à–∞—î –ø–æ —Å–æ–±—ñ –ø–æ—Ä–æ–∂–Ω—î –º—ñ—Å—Ü–µ
console.log(someArray);
*/
/*
someArray.splice(1, 1); // –º–µ—Ç–æ–¥ –≤–∏–¥–∞–ª—è—î –µ–ª–µ–º–µ–Ω—Ç —ñ "–∑–¥–≤–∏–≥–∞—î" –¥–∞–Ω—ñ –º–∞—Å–∏–≤—É
console.log(someArray);
*/
/*
someArray.splice(0, 1, "ü§•");// –≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ —ñ –∑–∞–º—ñ–Ω–∞ –π–æ–≥–æ —ñ–Ω—à–∏–º
console.log(someArray);
*/
/*
someArray.splice(1, 0, "ü§•"); // –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –ø–æ–∑–∏—Ü—ñ—é –≤ –º–∞—Å–∏–≤—ñ
console.log(someArray);
*/
/*
let someOtherArray = someArray.slice(1, 2);// –º–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —ñ –∫–æ–ø—ñ—é—î –≤ –Ω—å–æ–≥–æ –¥–∞–Ω—ñ –∑ —ñ–Ω—à–æ–≥–æ –º–∞—Å–∏–≤—É
console.log(someOtherArray);
*/
/*
let arrOne = ["üòÄ", "üòâ", "üòÆ‚Äçüí®"];
let arrTwo = arrOne.concat("üëä");
console.log(arrTwo);
*/
/*
let arrOne = ["üòÄ", "üòâ", "üòÆ‚Äçüí®"];
let arrTwo = arrOne.concat('ü§•', 'üëä', 'ü•≥');
console.log(arrTwo);
*/
/*
let someArray = ["üòÄ", "üòâ", "üòÆ‚Äçüí®", "ü§•", "üëä", "ü•≥"];
console.log(someArray.indexOf("üòÆ‚Äçüí®")); // –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –æ–±'—î–∫—Ç–∞
console.log(someArray.lastIndexOf("üòÆ‚Äçüí®"));
console.log(someArray.includes("üëä")); // –ü–æ–≤–µ—Ä—Ç–∞—î true or false
if (someArray.includes("üëä")) {
	someArray.push("üë≥‚Äç‚ôÄÔ∏è");
}
console.log(someArray);
if (!someArray.includes("üí™")) {
	someArray.push("üß†");
}
console.log(someArray);
*/
/*
let cars = [
	{ brand: "Opel", model: "Astra", year: 2008, price: 5000 },
	{ brand: "Toyota", model: "Camry", year: 2010, price: 5000 },
	{ brand: "BMW", model: "X3", year: 2010, price: 15000 },
];
let carOne = cars.find(function (item, index, array) {
	return item.year === 2010;
});
let carTwo = cars.findIndex(function (item, index, array) {
	return index.year === 2010;
});
console.log(carOne);
console.log(carTwo);
*/
/*
let cars = [
	{ brand: "Opel", model: "Astra", year: 2008, price: 5000 },
	{ brand: "Toyota", model: "Camry", year: 2010, price: 5000 },
	{ brand: "BMW", model: "X3", year: 2010, price: 15000 },
];
let result = cars.filter(function (item, index, array) {
	return item.year <= 2009;
});
console.log(result);
*/
/*
let someArray = [-92, -51, -10, 3, 94, -30, -18, 16];
console.log(someArray.sort());
function compareNumeric(a, b) {
	// console.log(`–ü–æ—Ä—ñ–≤–Ω—é—î–º–æ ${a} —ñ ${b}`);
	// if (a > b) return 1;
	// if (a == b) return 0;
	// if (a < b) return -1;
	return a - b;
}
console.log(someArray.sort(compareNumeric));//–≤ –º–µ—Ç–æ–¥ sort –ø–µ—Ä–µ–¥–∞—î—Ç—Å—è—å —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω —á–∏—Å–µ–ª
*/
/*
let someArray = ["–ì–∞–ª—è", "–ï–ª—ñ–Ω–∞", "–¢–µ—Ç—è–Ω–∞", "–¨", "–ú–∞—Ä—ñ—è", "–ê–Ω—Ç–æ–Ω", "–ù–∞–∑–∞—Ä"];
let result = someArray.map(function (item, index, array) {
	return item[0];//–ü–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —ñ–∑ –ø–µ—Ä—à–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤ —Ä—è–¥–∫–∞
});
console.log(someArray);
console.log(result);
*/
/*
let someString = "–°–∏–≤–æ—á–æ–ª–æ–∏–π, –≥–µ—Ç—å–º–∞–Ω –ø–µ—Ä–µ–º–æ–≥–∏, –ü–µ—Ç—Ä–æ";
let someArr = someString.split(',');//–ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—è–¥–∫–∞ –≤ –º–∞—Å–∏–≤
console.log(someArr);
*/
/*
let someArray = ["–±–∞—Ç—å–∫–æ", "–Ω–∞—à", "–ë–∞–Ω–¥–µ—Ä–∞"];
let someString = someArray.join(' ');
console.log(someString);
*/
//–ó–∞–¥–∞—á–∞ ‚Ññ 2
/*
let users = ["–í–∞–Ω—è", "–Ü—à—Ç–≤–∞–Ω",];//–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É
users.forEach(function (item, index, array) {
	if (!users.includes("–û–ª—è")) {
		users.push("–û–ª—è"); //–î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É –Ω–æ–≤–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
	}
	if (users.includes("–Ü—à—Ç–≤–∞–Ω")) {
		users.splice(1, 1, "–ü–µ—Ç—è"); // –ó–∞–º—ñ–Ω–∞ –Ü—à—Ç–≤–∞–Ω–∞ –Ω–∞ –ü–µ—Ç—é
	}
});
let removedUser = users.splice(0, 1); //–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤–∞
console.log(removedUser);//–≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–¥–∞–ª–µ–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
users.unshift("–ú–∞—à–∞", "–ü–∞—à–∞");//–¥–æ–¥–≤–∞–≤–Ω–Ω—è –¥–≤–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
console.log(users);
*/
/*
let users = ["–í–∞–Ω—è", "–Ü—à—Ç–≤–∞–Ω",];//–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É
users.forEach(function (item, index, array) {
	if (!users.includes("–û–ª—è")) {
		users.push("–û–ª—è"); //–î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É –Ω–æ–≤–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
	} else if (users.includes("–Ü—à—Ç–≤–∞–Ω")) {
		users.splice(1, 1, "–ü–µ—Ç—è"); // –ó–∞–º—ñ–Ω–∞ –Ü—à—Ç–≤–∞–Ω–∞ –Ω–∞ –ü–µ—Ç—é
	}
	if (!users.includes("–Ü—à—Ç–≤–∞–Ω")) {
		let removedUser = users.splice(0, 1);//–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤–∞
		console.log(removedUser);//–≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–¥–∞–ª–µ–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
		users.unshift("–ú–∞—à–∞", "–ü–∞—à–∞");//–¥–æ–¥–≤–∞–≤–Ω–Ω—è –¥–≤–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
	}
});
console.log(users);
*/
//–§—É–Ω–∫—Ü—ñ—ó
/*
function showMessage() {
	console.log("–í –Ω–µ–±–µ—Å–µ—Ö –ß–µ—Ä–∫–∞—â–∏–Ω–∏!");
}
showMessage();
*/
/*
let randomNumOne = Math.random() * 10;
let randomNumTwo = Math.random() * 20;
function calacSum(a, b) {
	showSum(a + b);
}
function showSum(sum) {
	console.log(sum);
}
calacSum(randomNumOne, randomNumTwo);
*/
/**
function showName(name = "–ü–µ—Ç—Ä–æ –ü–æ—Ä—É–±–∞–Ω–∏–π") {
	console.log(name);
}
showName("–ì–µ—Ç—å–º–∞–Ω –ø–µ—Ä–µ–º–æ–≥–∏");
showName(); // –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–µ—Ü—ñ—ó —ñ–∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º –∑–∞ –∑–∞–º–≤—á–µ–Ω–Ω—è–º
*/
/**
let randomOne = Math.random() * 10;
let randomTwo = Math.random() * 20;
function divideNums(a, b) {
	return b / a;
}
function showResult(share) {
	console.log(share);
}
let divideShareResult = divideNums(randomTwo, randomOne);
showResult(divideShareResult);
*/
/*
let randomNumOne, randomNumTwo;

function getNumbers() {
	function getRandomNumOne() {
		randomNumOne = Math.random();
	}
	function getRandomNumTwo() {
		randomNumTwo = Math.random();
	}
	getRandomNumOne();
	getRandomNumTwo();
}
getNumbers()

let smileOne, smileTwo;

function getSmiles() {
	function getSmileOne() {
		smileOne = "üòÄ";
	}
	function getSmileTwo() {
		smileTwo = "üòÆ‚Äçüí®";
	}
	getSmileOne();
	getSmileTwo();
}
getSmiles();

function showSmile() {
	function showSmileOne() {
		console.log(smileOne);
	}
	function showSmileTwo() {
		console.log(smileTwo);
	}
	showSmileOne();
	showSmileTwo();
}

if (randomNumOne > randomNumTwo) {
	console.log(smileOne);
} else {
	console.log(smileTwo);
}
*/
/*
let showTextArrow = (text) => console.log(text);
showTextArrow("text");
*/
/**
function showMood(text, smile) {
	console.log(`${text}, ${smile}`);
	setTimeout(showMood, 1000, text, smile);
}
setTimeout(showMood, 1000, '–°—å–æ–≥–æ–¥–Ω—ñ –Ω–∞—Å—Ç—Ä—ñ–π:', 'üòÄ');
*/
/**
//–ó–∞–¥–∞—á–∞ ‚Ññ 3
let showMessage;
function getMessage() {
	showMessage = function () {
		console.log('–°–æ–æ–±—â–µ–Ω–∏–µ');
	}
}
getMessage();
showMessage();
*/
//DOM & BOM
/*
function showWindowSize() {
	function showWindowWidth() {
		let windowWidth = window.innerWidth;
		console.log(`–®–∏—Ä–∏–Ω–∞ –≤—ñ–∫–Ω–∞: ${windowWidth}px`);
	}
	showWindowWidth();
	function showWindowHeight() {
		let windowHeight = window.innerHeight;
		console.log(`–í–∏—Å–æ—Ç–∞ –≤—ñ–∫–Ω–∞: ${windowHeight}px`);
	}
	showWindowHeight();
}
showWindowSize();

function showSystemData() {
	function showBrowserData() {
		console.log(navigator.userAgent);
	}
	showBrowserData();
	function showPlatdormData() {
		console.log(navigator.platform);
	}
	showPlatdormData();
}
showSystemData();
*/
// console.log(location.href);
// location.href = "https://google.com";
// –ó–∞–¥–∞—á–∞ ‚Ññ 1 –î—ñ–∑–Ω–∞—Ç–∏—Å—å —à–∏—Ä–∏–Ω—É –ø–æ–ª–æ—Å–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
/*
function scrollWidth() { // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é 
	const mainElement = document.documentElement; //–û—Ç—Ä–∏–º—É—î–º–æ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç 
	const mainElementWidth = mainElement.clientWidth; // –û—Ç—Ä–∏–º—É—î–º–æ —à–∏—Ä–∏–Ω—É –≤—ñ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –±–µ–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –ø–æ–ª–æ—Å–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	const windowWidth = window.innerWidth; // –û—Ç—Ä–∏–º—É—î–º–æ —à–∏—Ä–∏–Ω—É –≤—ñ–∫–Ω–∞ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —à–∏—Ä–∏–Ω –ø–æ–ª–æ—Å–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	function getDiff() { // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–º–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ü—ñ —à–∏—Ä–∏–Ω–∏ –≤—ñ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ —Ç–∞ —à–∏—Ä–∏–Ω–∏ –≤—ñ–∫–Ω–∞
		const difference = windowWidth - mainElementWidth; // –û–ø–µ—Ä–∞—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ü—ñ —à–∏—Ä–∏–Ω–∏ –≤—ñ–∫–Ω–∞ —Ç–∞ —à–∏—Ä–∏–Ω–∏ –±—Ä–∞—É–∑–µ—Ä–∞.
		console.log(difference);
	}
	getDiff();
}
scrollWidth();
*/
/*
–ó–∞–¥–∞—á–∞ ‚Ññ 2 –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–∫ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
function scrollWindow() {
	window.scrollBy(0, 100);
	// const windowScrolTop = window.pageYOffset;
	// console.log(windowScrolTop);
}
setTimeout(scrollWindow, 1000);
*/
//–ó–∞–¥–∞—á–∞ ‚Ññ 3
/*
function showDocItemsCoord() { // –°—Ç–≤–æ—Ä—é–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–≤–æ–¥—É –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç—Ä—å–æ—Ö –æ–±'—î–∫—Ç—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
	function getItemsCoord() { // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç—Ä—å–æ—Ö –æ–±'—î–∫—Ç—ñ–≤
		const pageItemArray = document.querySelector('.array__text'); // –û—Ç—Ä–∏–º—É—î–º–æ –≤ –∑–º—ñ–Ω–Ω—É –æ–±'—î–∫—Ç ‚Ññ 1
		const pageItemFunction = document.querySelector('.function__text'); // –û—Ç—Ä–∏–º—É—î–º–æ –≤ –∑–º—ñ–Ω–Ω—É –æ–±'—î–∫—Ç ‚Ññ 2
		const pageItemDom = document.querySelector('.dom__text');// –û—Ç—Ä–∏–º—É—î–º–æ –≤ –∑–º—ñ–Ω–Ω—É –æ–±'—î–∫—Ç ‚Ññ 3
		const getArrayText = pageItemArray.getBoundingClientRect().top; // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±'—î–∫—Ç–∞ ‚Ññ 1
		const getFunctionText = pageItemFunction.getBoundingClientRect().top; // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±'—î–∫—Ç–∞ ‚Ññ 2
		const getDomText = pageItemDom.getBoundingClientRect().top; // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±'—î–∫—Ç–∞ ‚Ññ 3
		const itemsCoordArray = [getArrayText, getFunctionText, getDomText]; // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –≤ –Ω—å–æ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±'—î–∫—Ç—ñ–≤ 
		if (Array.isArray(itemsCoordArray)) { // –†–æ–±–∏–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —á–∏ –ø–µ—Ä–µ–¥–∞–Ω—ñ –¥–∞–Ω—ñ —î –º–∞—Å–∏–≤–æ–º, —è–∫—â–æ —Ç–∞–∫ —Ç–æ –≤–∏–≤–æ–¥–∏–º–æ —ó—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
			console.log(itemsCoordArray);
		}
	}
	getItemsCoord();
}
showDocItemsCoord();
*/
/*
function showWindowItemsCoord() { 
	function getItemsCoord() {
		const headerTitle = document.querySelector('.header__title');
		const arrayTitle = document.querySelector('.array__title');
		const fuctionTitle = document.querySelector('.function__title');
		const getHeaderTitleCoord = headerTitle.getBoundingClientRect();
		const getArrayTitleCoord = arrayTitle.getBoundingClientRect();
		const getfuctionTitleCoord = fuctionTitle.getBoundingClientRect();
		const itemsCoordArray = [getHeaderTitleCoord, getArrayTitleCoord, getfuctionTitleCoord];
		if (Array.isArray(itemsCoordArray)) {
			console.log(itemsCoordArray);
		}
	}
	getItemsCoord();
}
showWindowItemsCoord();
*/
/*
const htmlElement = document.documentElement; // –î–æ —Ç–µ–≥—É html
const headElement = document.head;// –î–æ —Ç–µ–≥—É head
const bodyElement = document.body; //–î–æ —Ç–µ–≥—É body
console.log(bodyElement);
*/
/*
const bodyElement = document.body;
const firstChild = bodyElement.firstElementChild; // –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –æ–±–≥–æ—Ä—Ç–∫–∞ wrapper
const lastChild = bodyElement.lastElementChild; // –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç —Ç–µ–≥ script
console.log(firstChild);
console.log(lastChild);
*/
/*
const bodyElement = document.body;
const childNodes = bodyElement.children;
console.log(childNodes);
for (let i = 0; i < childNodes.length; ++i) {
	console.log(childNodes[i]);
}
for (let childNode of childNodes) {
	console.log(childNode);
}
*/
/*
const bodyElement = document.body;
const childNodes = bodyElement.childNodes;// –∑–±–∏—Ä–∞—î –∫–æ–ª–µ–∫—Ü—ñ—é —Ä–∞–∑–æ–º –∑ —Ç–µ–∫—Å–æ–≤–∏–º–∏ –≤—É–∑–ª–∞–º–∏
console.log(childNodes);
for (let childNode of childNodes) {
	console.log(childNode);
}
*/
/*
const bodyElement = document.body;
const previousSiblingNode = bodyElement.previousSibling; //–ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–æ–≤–∏–π –≤—É–∑–æ–ª
const nextSiblingNode = bodyElement.nextSibling; // –Ω–∞—Å—Ç—É–ø–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π (null)
const parentNode = bodyElement.parentNode; // –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –µ–ª–µ–º–µ–Ω html
console.log(previousSiblingNode);
console.log(nextSiblingNode);
console.log(parentNode);
*/
/*
const someObject = document.querySelector('.header__title');
console.log(someObject);
*/
/*
const menuItem = document.querySelector('.menu__item');//querySelector –æ—Ç—Ä–∏–º—É—î –ø–µ—Ä—à–∏–π –∑–Ω–∞–π–¥–µ–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
*/
/*
const menuItem = document.querySelectorAll('.menu__item');//querySelectorAll –æ—Ç—Ä–∏–º—É—î –∫–æ–ª–µ–∫—Ü—ñ—é –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
console.log(menuItem);
menuItem.forEach(menuItem => {
	menuItem.style.color = '#000'; // –∑–º—ñ–Ω–∞ CSS –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—ñ–≤ —ñ–Ω–ª–∞–π–Ω–æ–≤–æ –≤ HTML
	menuItem.style.fontSize = '30px';
});
*/
/*
const menuList = document.querySelector('.menu__list');
const isNavParent = menuList.closest('nav');
if (isNavParent) {
	console.log('–¢–∞–∫, —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É —Ç–µ–≥–æ–≤—ñ NAV.');
} else {
	console.log('–ù—ñ, —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É —ñ–Ω—à–æ–º—É —Ç–µ–≥–æ–≤—ñ.');
}
*/
/*
const menuItem = document.querySelectorAll('.menu__item');
menuItem.forEach((menuItem, index) => {
	menuItem.innerHTML = `<ol>–Ü–Ω–¥–µ–∫—Å: ${index}</ol>`;//–ó–∞–º—ñ–Ω–∞ —É—Å—ñ—Ö –µ–ª–µ–º–Ω—Ç—ñ–≤ –≤ –æ—Ç—Ä–∏–º–∞–Ω–æ–º—É –æ–±'—î–∫—Ç—ñ
});
*/
/*
let newObject = document.createElement('ol'); // —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –æ–±'—î–∫—Ç—É
newObject.innerHTML = `<li>–ü—É–Ω–∫—Ç 1</li>
											<li>–ü—É–Ω–∫—Ç 2</li>
											<li>–ü—É–Ω–∫—Ç 3</li>`
	;
console.log(newObject);
const subList = document.querySelector('.menu__item');
// subList.before(newObject);// –≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–≥–æ –æ–±'—î–∫—Ç–∞ –≤ —Å–µ—Ä–µ–¥—É ul –ø–µ—Ä–µ–¥ –ø–µ—Ä—à–∏–º li (–Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ —Å–µ–º–µ–Ω—Ç–∏—Ü—ñ)
// subList.after(newObject);// –≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–≥–æ –æ–±'—î–∫—Ç–∞ –≤ —Å–µ—Ä–µ–¥—É ul –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ li (–Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ —Å–µ–º–µ–Ω—Ç–∏—Ü—ñ)
// subList.prepend(newObject);//–≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–≥–æ –æ–±'—î–∫—Ç–∞ –≤ —Å–µ—Ä–µ–¥—É –ø–µ—Ä—à–æ–≥–æ li –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º ()
//subList.append(newObject); //–≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–≥–æ –æ–±'—î–∫—Ç–∞ –≤ —Å–µ—Ä–µ–¥—É –ø–µ—Ä—à–æ–≥–æ li –ø—ñ—Å–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç—É ()
*/
const subList = document.querySelector('.menu__item');
/*
subList.insertAdjacentHTML("beforebegin", `
			<ul class="menu__sublist sublis-menu">
				<li class="sublis-menu__item">Item1</li>
				<li class="sublis-menu__item">Item2</li>
				<li class="sublis-menu__item">Item3</li>
			</ul>
`);//–≤—Å—Ç–∞–≤–∫–∞ –∫–æ–¥—É –≤ —Å–µ—Ä–µ–¥—É ul –ø–µ—Ä–µ–¥ –ø–µ—Ä—à–∏–º li (—è–∫ –≤ before)
*/
/*
subList.insertAdjacentHTML("afterbegin", `
			<ul class="menu__sublist sublis-menu">
				<li class="sublis-menu__item">Item1</li>
				<li class="sublis-menu__item">Item2</li>
				<li class="sublis-menu__item">Item3</li>
			</ul>
`);//–≤—Å—Ç–∞–≤–∫–∞ –∫–æ–¥—É –≤ —Å–µ—Ä–µ–¥—É –ø–µ—Ä—à–æ–≥–æ li –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–Ω–æ–º (—è–∫ –≤ prepend)
*/
/*
subList.insertAdjacentHTML("beforeend", `
			<ul class="menu__sublist sublis-menu">
				<li class="sublis-menu__item">Item1</li>
				<li class="sublis-menu__item">Item2</li>
				<li class="sublis-menu__item">Item3</li>
			</ul>
`);//–≤—Å—Ç–∞–≤–∫–∞ –∫–æ–¥—É –≤ —Å–µ—Ä–µ–¥—É –ø–µ—Ä—à–æ–≥–æ li –ø—ñ—Å–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç—É (—è–∫ –≤ append)
const sublisMenu = document.querySelector('.sublis-menu');
console.log(sublisMenu);
*/
/*
subList.insertAdjacentHTML("afterend", `
			<ul class="menu__sublist sublis-menu">
				<li class="sublis-menu__item">Item1</li>
				<li class="sublis-menu__item">Item2</li>
				<li class="sublis-menu__item">Item3</li>
			</ul>
`);//–≤—Å—Ç–∞–≤–∫–∞ –∫–æ–¥—É –≤ —Å–µ—Ä–µ–¥—É ul –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ li (—è–∫ –≤ after)
*/
/*
const menuList = document.querySelector('.menu__list');
const listItem = document.querySelector('.menu__item')
menuList.insertAdjacentElement("beforeend", listItem);//–ø–µ—Ä–µ—Å—Ç–∞–≤–∏–ª–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –≤ –∫—ñ–Ω–µ—Ü—å
console.log(listItem);
*/
/*
const sayHi = document.querySelector('[data-say-hi]');
sayHi.remove();//–≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞
*/
//–ó–∞–¥–∞—á–∞ ‚Ññ 1
/*
const sayHi = document.getElementById('#greeting');
console.log(greeting.getAttribute('data-say-hi'));
*/
/*
const sayHi = document.querySelector('div');
console.log(sayHi.getAttribute('data-say-hi'));
*/
//–ó–∞–¥–∞—á–∞ ‚Ññ 2
/*
const listItem = document.querySelector('li');
const nextElementSibling = listItem.nextElementSibling;
*/
// –ó–∞–¥–∞—á–∞ ‚Ññ 3
//const likeElements = document.querySelectorAll('.like');
//–ó–∞–¥–∞—á–∞ ‚Ññ 4 - —Ç–µ–∫—Å—Ç –¥–æ–¥–∞—Å—Ç—å—Å—è –≤ –∫—ñ–Ω–µ—Ü—å —Å–ø–∏—Å–∫—É 





